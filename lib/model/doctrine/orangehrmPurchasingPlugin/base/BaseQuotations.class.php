<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Quotations', 'doctrine');

/**
 * BaseQuotations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $vendor_id
 * @property integer $product_id
 * @property float $price
 * @property integer $recipient_id
 * @property timestamp $issued_date
 * @property timestamp $deadline
 * @property integer $requester_id
 * @property integer $approved_by
 * @property string $description
 * @property integer $quantity
 * @property string $transaction_number
 * @property string $term_of_payment
 * @property Product $Product
 * @property OhrmUser $User_3
 * @property OhrmUser $User_4
 * @property Vendor $Vendor
 * 
 * @method integer    getId()                 Returns the current record's "id" value
 * @method integer    getVendorId()           Returns the current record's "vendor_id" value
 * @method integer    getProductId()          Returns the current record's "product_id" value
 * @method float      getPrice()              Returns the current record's "price" value
 * @method integer    getRecipientId()        Returns the current record's "recipient_id" value
 * @method timestamp  getIssuedDate()         Returns the current record's "issued_date" value
 * @method timestamp  getDeadline()           Returns the current record's "deadline" value
 * @method integer    getRequesterId()        Returns the current record's "requester_id" value
 * @method integer    getApprovedBy()         Returns the current record's "approved_by" value
 * @method string     getDescription()        Returns the current record's "description" value
 * @method integer    getQuantity()           Returns the current record's "quantity" value
 * @method string     getTransactionNumber()  Returns the current record's "transaction_number" value
 * @method string     getTermOfPayment()      Returns the current record's "term_of_payment" value
 * @method Product    getProduct()            Returns the current record's "Product" value
 * @method OhrmUser   getUser3()              Returns the current record's "User_3" value
 * @method OhrmUser   getUser4()              Returns the current record's "User_4" value
 * @method Vendor     getVendor()             Returns the current record's "Vendor" value
 * @method Quotations setId()                 Sets the current record's "id" value
 * @method Quotations setVendorId()           Sets the current record's "vendor_id" value
 * @method Quotations setProductId()          Sets the current record's "product_id" value
 * @method Quotations setPrice()              Sets the current record's "price" value
 * @method Quotations setRecipientId()        Sets the current record's "recipient_id" value
 * @method Quotations setIssuedDate()         Sets the current record's "issued_date" value
 * @method Quotations setDeadline()           Sets the current record's "deadline" value
 * @method Quotations setRequesterId()        Sets the current record's "requester_id" value
 * @method Quotations setApprovedBy()         Sets the current record's "approved_by" value
 * @method Quotations setDescription()        Sets the current record's "description" value
 * @method Quotations setQuantity()           Sets the current record's "quantity" value
 * @method Quotations setTransactionNumber()  Sets the current record's "transaction_number" value
 * @method Quotations setTermOfPayment()      Sets the current record's "term_of_payment" value
 * @method Quotations setProduct()            Sets the current record's "Product" value
 * @method Quotations setUser3()              Sets the current record's "User_3" value
 * @method Quotations setUser4()              Sets the current record's "User_4" value
 * @method Quotations setVendor()             Sets the current record's "Vendor" value
 * 
 * @package    orangehrm
 * @subpackage model\purchasing\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuotations extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_quotations');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('vendor_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('recipient_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('issued_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deadline', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('requester_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('approved_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('quantity', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('transaction_number', 'string', 225, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 225,
             ));
        $this->hasColumn('term_of_payment', 'string', 225, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 225,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $this->hasOne('OhrmUser as User_3', array(
             'local' => 'recipient_id',
             'foreign' => 'id'));

        $this->hasOne('OhrmUser as User_4', array(
             'local' => 'requester_id',
             'foreign' => 'id'));

        $this->hasOne('Vendor', array(
             'local' => 'vendor_id',
             'foreign' => 'id'));
    }
}